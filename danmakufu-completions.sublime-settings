{
	"scope": "source.danmakufu",

	"dict":
	[

		// Math functions

		{ "sig": "Math::min(a, b)\treal", "doc": "" },
		{ "sig": "Math::max(a, b)\treal", "doc": "" },
		{ "sig": "Math::log(a)\treal", "doc": "" },
		{ "sig": "Math::log10(a)\treal", "doc": "" },
		{ "sig": "Math::cos(angle)\treal", "doc": "" },
		{ "sig": "Math::sin(angle)\treal", "doc": "" },
		{ "sig": "Math::tan(angle)\treal", "doc": "" },
		{ "sig": "Math::acos(x)\treal", "doc": "" },
		{ "sig": "Math::asin(y)\treal", "doc": "" },
		{ "sig": "Math::atan(a)\treal", "doc": "" },
		{ "sig": "Math::atan2(y, x)\treal", "doc": "" },
		{ "sig": "Math::rand(min, max)\treal", "doc": "" },
		{ "sig": "Math::round(a)\treal", "doc": "" },
		{ "sig": "Math::truncate(a)\treal", "doc": "" },
		{ "sig": "Math::ceil(a)\treal", "doc": "" },
		{ "sig": "Math::floor(a)\treal", "doc": "" },
		{ "sig": "Math::absolute(a)\treal", "doc": "" },
		{ "sig": "Math::modc(a, mod)\treal", "doc": "" },

		// String functions

		{ "sig": "String::InstallFont(path)\tbool", "doc": "" },
		{ "sig": "String::ToString(a)\tchar", "doc": "" },
		{ "sig": "String::IntToString(num)\tchar", "doc": "" },
		{ "sig": "String::itoa(num)\tchar", "doc": "" },
		{ "sig": "String::rtoa(num)\tchar", "doc": "" },
		{ "sig": "String::rtos(format, num)\tchar", "doc": "" },
		{ "sig": "String::vtos(format, num)\tchar", "doc": "" },
		{ "sig": "String::atoi(str)\treal", "doc": "" },
		{ "sig": "String::ator(str)\treal", "doc": "" },
		{ "sig": "String::TrimString(str)\tchar", "doc": "" },
		{ "sig": "String::SplitString(str, delimiter)\tchar[]", "doc": "" },

		// Path functions

		{ "sig": "Path::GetFileDirectory(path)\tchar", "doc": "" },
		{ "sig": "Path::GetDirectoryList(path)\tstring[]", "doc": "" },
		{ "sig": "Path::GetModuleDirectory()\tchar", "doc": "" },
		{ "sig": "Path::GetMainStgScriptPath()\tchar", "doc": "" },
		{ "sig": "Path::GetMainPackageScriptPath()\tchar", "doc": "" },
		{ "sig": "Path::GetMainStgScriptDirectory()\tchar", "doc": "" },
		{ "sig": "Path::GetCurrentScriptDirectory()\tchar", "doc": "" },
		{ "sig": "Path::GetScriptPathList(folder, type)\tstring[]", "doc": "" },

		// Time functions

		{ "sig": "Time::GetCurrentDateTimeS()\tchar", "doc": "" },
		{ "sig": "Time::GetStageTime()\treal", "doc": "" },
		{ "sig": "Time::GetPackageTime()\treal", "doc": "" },
		{ "sig": "Time::GetCurrentFps()\treal", "doc": "" },
		{ "sig": "Time::GetReplayFps()\treal", "doc": "" },

		// Debug functions

		{ "sig": "Debug::WriteLog(string)\tvoid", "doc": "" },
		{ "sig": "Debug::RaiseError(string)\tvoid", "doc": "" },

		// Common Data functions
		{ "sig": "CommonData::SetCommonData(key, value)\tvoid", "doc": "" },
		{ "sig": "CommonData::GetCommonData(key, default)\tfree", "doc": "" },
		{ "sig": "CommonData::ClearCommonData()\tvoid", "doc": "" },
		{ "sig": "CommonData::DeleteCommonData(key)\tvoid", "doc": "" },
		{ "sig": "CommonData::SetAreaCommonData(area, key, value)\tvoid", "doc": "" },
		{ "sig": "CommonData::GetAreaCommonData(area, key, default)\tfree", "doc": "" },
		{ "sig": "CommonData::ClearAreaCommonData(area)\tvoid", "doc": "" },
		{ "sig": "CommonData::DeleteAreaCommonData(area, key)\tvoid", "doc": "" },
		{ "sig": "CommonData::CreateCommonDataArea(area)\tvoid", "doc": "" },
		{ "sig": "CommonData::IsCommonDataAreaExists(area)\tbool", "doc": "" },
		{ "sig": "CommonData::CopyCommonDataArea(area1, area2)\tvoid", "doc": "" },
		{ "sig": "CommonData::GetCommonDataAreaKeyList()\tchar[]", "doc": "" },
		{ "sig": "CommonData::GetCommonDataValueKeyList(area)\tchar[]", "doc": "" },
		{ "sig": "CommonData::SaveCommonDataAreaA1(area)\tbool", "doc": "" },
		{ "sig": "CommonData::LoadCommonDataAreaA1(area)\tbool", "doc": "" },
		{ "sig": "CommonData::SaveCommonDataAreaA2(area, path)\tbool", "doc": "" },
		{ "sig": "CommonData::LoadCommonDataAreaA2(area, path)\tbool", "doc": "" },
		{ "sig": "CommonData::SaveCommonDataAreaToReplayFile(area)\tbool", "doc": "" },
		{ "sig": "CommonData::LoadCommonDataAreaFromReplayFile(area)\tbool", "doc": "" },

		// Audio functions

		{ "sig": "Audio::LoadSound(path)\tvoid", "doc": "" },
		{ "sig": "Audio::RemoveSound(path)\tvoid", "doc": "" },
		{ "sig": "Audio::PlayBGM(path, loop_start, loop_end)\tvoid", "doc": "" },
		{ "sig": "Audio::PlaySE(path)\tvoid", "doc": "" },
		{ "sig": "Audio::StopSound(path)\tvoid", "doc": "" },

		//Input functions

		{ "sig": "Input::GetVirtualKeyState(key)\tconstant", "doc": "" },
		{ "sig": "Input::SetVirtualKeyState(key, state)\tvoid", "doc": "" },
		{ "sig": "Input::AddVirtualKey(v_key, key, pad_key)\tvoid", "doc": "" },
		{ "sig": "Input::AddReplayTargetVirtualKey(key)\tvoid", "doc": "" },
		{ "sig": "Input::GetKeyState(key)\tconstant", "doc": "" },
		{ "sig": "Input::GetMouseState(button)\tconstant", "doc": "" },
		{ "sig": "Input::GetMouseX()\treal", "doc": "" },
		{ "sig": "Input::GetMouseY()\treal", "doc": "" },
		{ "sig": "Input::GetMouseMoveZ()\treal", "doc": "" },
		{ "sig": "Input::SetSkipModeKey(key)\tvoid", "doc": "" },

		//Render functions

		{ "sig": "Render::LoadTexture(path)\tvoid", "doc": "" },
		{ "sig": "Render::LoadTextureInLoadThread(path)\tvoid", "doc": "" },
		{ "sig": "Render::RemoveTexture(path)\tvoid", "doc": "" },
		{ "sig": "Render::GetTextureWidth(path)\treal", "doc": "" },
		{ "sig": "Render::GetTextureHeight(path)\treal", "doc": "" },
		{ "sig": "Render::SetFogEnable(bool)\tvoid", "doc": "" },
		{ "sig": "Render::SetFogParam(start, end, r, g, b)\tvoid", "doc": "" },
		{ "sig": "Render::ClearInvalidRenderPriority()\tvoid", "doc": "" },
		{ "sig": "Render::SetInvalidRenderPriorityA1(start, end)\tvoid", "doc": "" },
		{ "sig": "Render::GetReservedRenderTargetName(index)\tvoid", "doc": "" },
		{ "sig": "Render::CreateRenderTarget(target)\tbool", "doc": "" },
		{ "sig": "Render::RenderToTextureA1(target, start, end, clear)\tvoid", "doc": "" },
		{ "sig": "Render::RenderToTextureB1(target, obj, clear)\tvoid", "doc": "" },
		{ "sig": "Render::SaveRenderedTextureA1(target, file)\tvoid", "doc": "" },
		{ "sig": "Render::SaveRenderedTextureA2(target, file, l, t, r, b)\tvoid", "doc": "" },
		{ "sig": "Render::SaveSnapShotA1(file)\tvoid", "doc": "" },
		{ "sig": "Render::SaveSnapShotA2(file, l, t, r, b)\tvoid", "doc": "" },

		//3D Camera functions

		{ "sig": "3DCamera::SetCameraFocusX(x)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraFocusY(y)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraFocusZ(z)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraFocusXYZ(x, y, z)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraRadius(radius)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraAzimuthAngle(angle)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraElevationAngle(angle)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraYaw(angle)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraPitch(pitch)\tvoid", "doc": "" },
		{ "sig": "3DCamera::SetCameraRoll(roll)\tvoid", "doc": "" },
		{ "sig": "3DCamera::GetCameraX()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraY()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraZ()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraFocusX()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraFocusY()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraFocusZ()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraRadius()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraAzimuthAngle(angle)\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraElevationAngle(angle)\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraYaw()\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraPitch(pitch)\treal", "doc": "" },
		{ "sig": "3DCamera::GetCameraRoll(roll)\treal", "doc": "" },
		{ "sig": "3DCamera::SetCameraPerspectiveClip(near_clip, far_clip)\tvoid", "doc": "" },

		// 2D Camera functions

		{ "sig": "2DCamera::Set2DCameraFocusX(x)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Set2DCameraAngleZ(angle)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Set2DCameraFocusY(y)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Set2DCameraRatio(ratio)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Set2DCameraRatioX(ratio)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Set2DCameraRatioY(ratio)\tvoid", "doc": "" },
		{ "sig": "2DCamera::Reset2DCamera()\tvoid", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraX()\treal", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraY()\treal", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraAngleZ()\treal", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraRatio()\treal", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraRatioX()\treal", "doc": "" },
		{ "sig": "2DCamera::Get2DCameraRatioY()\treal", "doc": "" },

		//Script functions

		{ "sig": "Script::LoadScript(path)\treal[]", "doc": "" },
		{ "sig": "Script::LoadScriptInThread(path)\treal[]", "doc": "" },
		{ "sig": "Script::StartScript(id)\tvoid", "doc": "" },
		{ "sig": "Script::CloseScript(id)\tvoid", "doc": "" },
		{ "sig": "Script::IsCloseScript(id)\tbool", "doc": "" },
		{ "sig": "Script::SetScriptArgument(id, index, value)\tvoid", "doc": "" },
		{ "sig": "Script::GetScriptArgument(index)\tfree", "doc": "" },
		{ "sig": "Script::GetScriptArgumentCount()\treal", "doc": "" },
		{ "sig": "Script::CloseStgScene()\tvoid", "doc": "" },
		{ "sig": "Script::GetOwnScriptID()\treal[]", "doc": "" },
		{ "sig": "Script::GetEventType()\tconstant", "doc": "" },
		{ "sig": "Script::GetEventArgument(index)\tdepend", "doc": "" },
		{ "sig": "Script::SetScriptResult(value)\tvoid", "doc": "" },
		{ "sig": "Script::GetScriptResult(id)\tfree", "doc": "" },
		{ "sig": "Script::SetAutoDeleteObject(delete)\tvoid", "doc": "" },
		{ "sig": "Script::NotifyEvent(id, event_type, value)\tvoid", "doc": "" },
		{ "sig": "Script::NotifyEventAll(event_type, value)\tvoid", "doc": "" },
		{ "sig": "Script::GetScriptInfoA1(path, info_type)\tdepend", "doc": "" },

		//System functions

		{ "sig": "System::SetStgFrame(l, t, r, b, min_layer, max_layer)\t", "doc": "" },
		{ "sig": "System::GetScore()\treal", "doc": "" },
		{ "sig": "System::AddScore(value)\t", "doc": "" },
		{ "sig": "System::GetGraze()\treal", "doc": "" },
		{ "sig": "System::AddGraze(value)\t", "doc": "" },
		{ "sig": "System::GetPoint()\treal", "doc": "" },
		{ "sig": "System::AddPoint(num_items)\t", "doc": "" },
		{ "sig": "System::SetItemRenderPriorityI(layer)\t", "doc": "" },
		{ "sig": "System::SetShotRenderPriorityI(layer)\t", "doc": "" },
		{ "sig": "System::GetStgFrameRenderPriorityMinI()\treal", "doc": "" },
		{ "sig": "System::GetStgFrameRenderPriorityMaxI()\treal", "doc": "" },
		{ "sig": "System::GetItemRenderPriorityI()\treal", "doc": "" },
		{ "sig": "System::GetShotRenderPriorityI()\treal", "doc": "" },
		{ "sig": "System::GetPlayerRenderPriorityI()\treal", "doc": "" },
		{ "sig": "System::GetCameraFocusPermitPriorityI()\treal", "doc": "" },
		{ "sig": "System::GetStgFrameLeft()\treal", "doc": "" },
		{ "sig": "System::GetStgFrameTop()\treal", "doc": "" },
		{ "sig": "System::GetStgFrameWidth()\treal", "doc": "" },
		{ "sig": "System::GetStgFrameHeight()\treal", "doc": "" },
		{ "sig": "System::GetScreenWidth()\treal", "doc": "" },
		{ "sig": "System::GetScreenHeight()\treal", "doc": "" },
		{ "sig": "System::IsReplay()\tbool", "doc": "" },
		{ "sig": "System::AddArchiveFile(path)\tbool", "doc": "" },

		//Player functions

		{ "sig": "Player::GetPlayerObjectID()\tobj", "doc": "" },
		{ "sig": "Player::GetPlayerScriptID()\treal", "doc": "" },
		{ "sig": "Player::SetPlayerSpeed(normal_speed, focus_speed)\t", "doc": "" },
		{ "sig": "Player::SetPlayerClip(l, t, r, b)\t", "doc": "" },
		{ "sig": "Player::SetPlayerLife(value)\t", "doc": "" },
		{ "sig": "Player::SetPlayerSpell(value)\t", "doc": "" },
		{ "sig": "Player::SetPlayerPower(value)\t", "doc": "" },
		{ "sig": "Player::SetPlayerInvincibilityFrame(num_frames)\t", "doc": "" },
		{ "sig": "Player::SetPlayerDownStateFrame(num_frames)\t", "doc": "" },
		{ "sig": "Player::SetPlayerRebirthFrame(num_frames)\t", "doc": "" },
		{ "sig": "Player::SetPlayerRebirthLossFrame(lost_frames)\t", "doc": "" },
		{ "sig": "Player::SetPlayerAutoItemCollectLine(y)\t", "doc": "" },
		{ "sig": "Player::SetForbidPlayerShot(forbid)\t", "doc": "" },
		{ "sig": "Player::SetForbidPlayerSpell(forbid)\t", "doc": "" },
		{ "sig": "Player::GetPlayerX()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerY()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerState()\tconstant", "doc": "" },
		{ "sig": "Player::GetPlayerLife()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerSpell()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerPower()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerInvincibilityFrame()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerDownStateFrame()\treal", "doc": "" },
		{ "sig": "Player::GetPlayerRebirthFrame()\treal", "doc": "" },
		{ "sig": "Player::GetAngleToPlayer(obj)\treal", "doc": "" },
		{ "sig": "Player::IsPermitPlayerShot()\tbool", "doc": "" },
		{ "sig": "Player::IsPermitPlayerSpell()\tbool", "doc": "" },
		{ "sig": "Player::IsPlayerLastSpellWait()\tbool", "doc": "" },
		{ "sig": "Player::IsPlayerSpellActive()\tbool", "doc": "" },
		{ "sig": "Player::GetPlayerID()\tchar", "doc": "" },
		{ "sig": "Player::GetPlayerReplayName()\tchar", "doc": "" },


		//Enemy functions

		{ "sig": "Enemy::GetEnemyBossSceneObjectID()\tobj", "doc": "" },
		{ "sig": "Enemy::GetEnemyBossObjectID()\tobj[]", "doc": "" },
		{ "sig": "Enemy::GetAllEnemyID()\tobj[]", "doc": "" },
		{ "sig": "Enemy::GetIntersectionRegistedEnemyID()\tobj[]", "doc": "" },
		{ "sig": "Enemy::GetAllEnemyIntersectionPosition()\treal[][]", "doc": "" },
		{ "sig": "Enemy::GetEnemyIntersectionPosition(x, y, max_num)\treal[][]", "doc": "" },
		{ "sig": "Enemy::GetEnemyIntersectionPositionByIdA1(obj)\treal[][]", "doc": "" },
		{ "sig": "Enemy::GetEnemyIntersectionPositionByIdA2(obj, x, y)\treal[][]", "doc": "" },
		{ "sig": "Enemy::LoadEnemyShotData(path)\t", "doc": "" },
		{ "sig": "Enemy::ReloadEnemyShotData(path)\t", "doc": "" },

		//Shot functions

		{ "sig": "Shot::DeleteShotAll(bullet_type, delete_type)\t", "doc": "" },
		{ "sig": "Shot::DeleteShotInCircle(bullet_type, delete_type, x, y, r)\t", "doc": "" },
		{ "sig": "Shot::CreateShotA1(x, y, s, a, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateShotA2(x, y, s, a, acc, max_s, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateShotOA1(obj, speed, angle, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateShotB1(x, y, x_spd, y_spd, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateShotB2(x, y, x_spd, y_spd, x_acc, y_acc, x_max, y_max, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateShotOB1(obj, x, y, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateLooseLaserA1(x, y, s, a, l, w, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateStraightLaserA1(x, y, a, l, w, f, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::CreateCurveLaserA1(x, y, s, a, l, w, g, d)\tobj", "doc": "" },
		{ "sig": "Shot::SetShotIntersectionCircle(x, y, r)\t", "doc": "" },
		{ "sig": "Shot::SetShotIntersectionLine(start_x, start_y, end_x, end_y, r)\t", "doc": "" },
		{ "sig": "Shot::GetShotIdInCircleA1(x, y, r)\tobj[]", "doc": "" },
		{ "sig": "Shot::GetShotIdInCircleA2(x, y, r, target_type)\tobj[]", "doc": "" },
		{ "sig": "Shot::GetShotCount(target_type)\treal", "doc": "" },
		{ "sig": "Shot::SetShotAutoDeleteClip(l, t, r, b)\t", "doc": "" },
		{ "sig": "Shot::GetShotDataInfoA1(graphic, target_type, info_type)\tdepend", "doc": "" },

		//Item functions

		{ "sig": "Item::CreateItemA1(item_type, x, y, score)\tobj", "doc": "" },
		{ "sig": "Item::CreateItemA2(item_type, x, y, x_dest, y_dest, score)\tobj", "doc": "" },
		{ "sig": "Item::CreateItemU1(id, x, y, score)\tobj", "doc": "" },
		{ "sig": "Item::CreateItemU2(id, x, y, x_dest, y_dest, score)\tobj", "doc": "" },
		{ "sig": "Item::CollectAllItems()\t", "doc": "" },
		{ "sig": "Item::CollectItemsByType(item_type)\t", "doc": "" },
		{ "sig": "Item::CollectItemsInCircle(x, y, r)\t", "doc": "" },
		{ "sig": "Item::CancelCollectItems()\t", "doc": "" },
		{ "sig": "Item::StartItemScript(path)\t", "doc": "" },
		{ "sig": "Item::LoadItemData(path)\t", "doc": "" },
		{ "sig": "Item::ReloadItemData(path)\t", "doc": "" },
		{ "sig": "Item::SetDefaultBonusItemEnable(use)\t", "doc": "" },

		//Other functions

		{ "sig": "Other::StartSlow(obj, fps)\t", "doc": "" },
		{ "sig": "Other::StopSlow(obj)\t", "doc": "" },
		{ "sig": "Other::IsIntersected_Line_Circle(start_x, start_y, end_x, end_y, w, x, y, r)\tbool", "doc": "" },
		{ "sig": "Other::IsIntersected_Obj_Obj(obj1, obj2)\tbool", "doc": "" },
		{ "sig": "Other::GetObjectDistance(obj1, obj2)\t", "doc": "" },
		{ "sig": "Other::GetObject2dPosition(obj)\treal[]", "doc": "" },
		{ "sig": "Other::Get2dPosition(x, y, z)\treal[]", "doc": "" },

		// Generic Object functions

		{ "sig": "Obj_Delete(obj)\t", "doc": "" },
		{ "sig": "Obj_IsDeleted(obj)\t", "doc": "" },
		{ "sig": "Obj_SetVisible(obj, visible)\t", "doc": "" },
		{ "sig": "Obj_IsVisible(obj)\t", "doc": "" },
		{ "sig": "Obj_SetRenderPriority(obj, priority_ratio)\t", "doc": "" },
		{ "sig": "Obj_SetRenderPriorityI(obj, priority)\t", "doc": "" },
		{ "sig": "Obj_GetRenderPriority(obj)\t", "doc": "" },
		{ "sig": "Obj_GetRenderPriorityI(obj)\t", "doc": "" },
		{ "sig": "Obj_GetValue(obj, key)\t", "doc": "" },
		{ "sig": "Obj_GetValueD(obj, key, default)\t", "doc": "" },
		{ "sig": "Obj_SetValue(obj, key, value)\t", "doc": "" },
		{ "sig": "Obj_DeleteValue(obj, key)\t", "doc": "" },
		{ "sig": "Obj_IsValueExists(obj, key)\t", "doc": "" },
		{ "sig": "Obj_GetType(obj)\t", "doc": "" },

		// Render Object functions

		{ "sig": "ObjRender_SetX()\t", "doc": "" },
		{ "sig": "ObjRender_SetY()\t", "doc": "" },
		{ "sig": "ObjRender_SetZ()\t", "doc": "" },
		{ "sig": "ObjRender_SetPosition()\t", "doc": "" },
		{ "sig": "ObjRender_SetAngleX()\t", "doc": "" },
		{ "sig": "ObjRender_SetAngleY()\t", "doc": "" },
		{ "sig": "ObjRender_SetAngleZ()\t", "doc": "" },
		{ "sig": "ObjRender_SetAngleXYZ()\t", "doc": "" },
		{ "sig": "ObjRender_SetScaleX()\t", "doc": "" },
		{ "sig": "ObjRender_SetScaleY()\t", "doc": "" },
		{ "sig": "ObjRender_SetScaleZ()\t", "doc": "" },
		{ "sig": "ObjRender_SetScaleXYZ()\t", "doc": "" },
		{ "sig": "ObjRender_SetColor()\t", "doc": "" },
		{ "sig": "ObjRender_SetColorHSV()\t", "doc": "" },
		{ "sig": "ObjRender_SetAlpha()\t", "doc": "" },
		{ "sig": "ObjRender_SetBlendType()\t", "doc": "" },
		{ "sig": "ObjRender_GetX()\t", "doc": "" },
		{ "sig": "ObjRender_GetY()\t", "doc": "" },
		{ "sig": "ObjRender_GetZ()\t", "doc": "" },
		{ "sig": "ObjRender_GetAngleX()\t", "doc": "" },
		{ "sig": "ObjRender_GetAngleY()\t", "doc": "" },
		{ "sig": "ObjRender_GetAngleZ()\t", "doc": "" },
		{ "sig": "ObjRender_GetScaleX()\t", "doc": "" },
		{ "sig": "ObjRender_GetScaleY()\t", "doc": "" },
		{ "sig": "ObjRender_GetScaleZ()\t", "doc": "" },
		{ "sig": "ObjRender_GetBlendType()\t", "doc": "" },
		{ "sig": "ObjRender_SetZWrite()\t", "doc": "" },
		{ "sig": "ObjRender_SetZTest()\t", "doc": "" },
		{ "sig": "ObjRender_SetFogEnable()\t", "doc": "" },
		{ "sig": "ObjRender_SetPermitCamera()\t", "doc": "" },

		// Primitive Object functions

		{ "sig": "ObjPrim_Create()\t", "doc": "" },
		{ "sig": "ObjPrim_SetPrimitiveType()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexCount()\t", "doc": "" },
		{ "sig": "ObjPrim_GetVertexCount()\t", "doc": "" },
		{ "sig": "ObjPrim_SetTexture()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexPosition()\t", "doc": "" },
		{ "sig": "ObjPrim_GetVertexPosition()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexUV()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexUVT()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexColor()\t", "doc": "" },
		{ "sig": "ObjPrim_SetVertexAlpha()\t", "doc": "" },

		// 2D Sprite Object functions

		{ "sig": "ObjSprite2D_SetSourceRect()\t", "doc": "" },
		{ "sig": "ObjSprite2D_SetDestRect()\t", "doc": "" },
		{ "sig": "ObjSprite2D_SetDestCenter()\t", "doc": "" },

		// 2D Sprite List Object functions

		{ "sig": "ObjSpriteList2D_SetSourceRect()\t", "doc": "" },
		{ "sig": "ObjSpriteList2D_SetDestRect()\t", "doc": "" },
		{ "sig": "ObjSpriteList2D_SetDestCenter()\t", "doc": "" },
		{ "sig": "ObjSpriteList2D_AddVertex()\t", "doc": "" },
		{ "sig": "ObjSpriteList2D_CloseVertex()\t", "doc": "" },
		{ "sig": "ObjSpriteList2D_ClearVertexCount()\t", "doc": "" },

		// 3D Sprite Object functions

		{ "sig": "ObjSprite3D_SetSourceRect()\t", "doc": "" },
		{ "sig": "ObjSprite3D_SetDestRect()\t", "doc": "" },
		{ "sig": "ObjSprite3D_SetSourceDestRect()\t", "doc": "" },
		{ "sig": "ObjSprite3D_SetBillboard()\t", "doc": "" },

		// 3D Mesh Object functions

		{ "sig": "ObjMesh_Create()\t", "doc": "" },
		{ "sig": "ObjMesh_Load()\t", "doc": "" },
		{ "sig": "ObjMesh_SetColor()\t", "doc": "" },
		{ "sig": "ObjMesh_SetAlpha()\t", "doc": "" },
		{ "sig": "ObjMesh_SetAnimation()\t", "doc": "" },
		{ "sig": "ObjMesh_SetCoordinate2D()\t", "doc": "" },

		// Text Object functions

		{ "sig": "ObjText_Create()\t", "doc": "" },
		{ "sig": "ObjText_SetText()\t", "doc": "" },
		{ "sig": "ObjText_SetFontType()\t", "doc": "" },
		{ "sig": "ObjText_SetFontSize()\t", "doc": "" },
		{ "sig": "ObjText_SetFontBold()\t", "doc": "" },
		{ "sig": "ObjText_SetFontColorTop()\t", "doc": "" },
		{ "sig": "ObjText_SetFontColorBottom()\t", "doc": "" },
		{ "sig": "ObjText_SetFontBorderWidth()\t", "doc": "" },
		{ "sig": "ObjText_SetFontBorderType()\t", "doc": "" },
		{ "sig": "ObjText_SetFontBorderColor()\t", "doc": "" },
		{ "sig": "ObjText_SetMaxWidth()\t", "doc": "" },
		{ "sig": "ObjText_SetMaxHeight()\t", "doc": "" },
		{ "sig": "ObjText_SetLinePitch()\t", "doc": "" },
		{ "sig": "ObjText_SetSidePitch()\t", "doc": "" },
		{ "sig": "ObjText_SetTransCenter()\t", "doc": "" },
		{ "sig": "ObjText_SetAutoTransCenter()\t", "doc": "" },
		{ "sig": "ObjText_SetHorizontalAlignment()\t", "doc": "" },
		{ "sig": "ObjText_SetSyntacticAnalysis()\t", "doc": "" },
		{ "sig": "ObjText_GetTextLength()\t", "doc": "" },
		{ "sig": "ObjText_GetTextLengthCU()\t", "doc": "" },
		{ "sig": "ObjText_GetTextLengthCUL()\t", "doc": "" },
		{ "sig": "ObjText_GetTotalWidth()\t", "doc": "" },
		{ "sig": "ObjText_GetTotalHeight()\t", "doc": "" },

		// Sound Object functions

		{ "sig": "ObjSound_Create()\t", "doc": "" },
		{ "sig": "ObjSound_Load()\t", "doc": "" },
		{ "sig": "ObjSound_Play()\t", "doc": "" },
		{ "sig": "ObjSound_Stop()\t", "doc": "" },
		{ "sig": "ObjSound_SetVolumeRate()\t", "doc": "" },
		{ "sig": "ObjSound_SetPanRate()\t", "doc": "" },
		{ "sig": "ObjSound_SetFade()\t", "doc": "" },
		{ "sig": "ObjSound_SetLoopEnable()\t", "doc": "" },
		{ "sig": "ObjSound_SetLoopTime()\t", "doc": "" },
		{ "sig": "ObjSound_SetLoopSampleCount()\t", "doc": "" },
		{ "sig": "ObjSound_SetRestartEnable()\t", "doc": "" },
		{ "sig": "ObjSound_SetSoundDivision()\t", "doc": "" },
		{ "sig": "ObjSound_IsPlaying()\t", "doc": "" },
		{ "sig": "ObjSound_GetVolumeRate()\t", "doc": "" },

		// File Object functions

		{ "sig": "ObjFile_Create()\t", "doc": "" },
		{ "sig": "ObjFile_Open()\t", "doc": "" },
		{ "sig": "ObjFile_OpenNW()\t", "doc": "" },
		{ "sig": "ObjFile_Store()\t", "doc": "" },
		{ "sig": "ObjFile_GetSize()\t", "doc": "" },

		// Text File Object functions

		{ "sig": "ObjFileT_GetLineCount()\t", "doc": "" },
		{ "sig": "ObjFileT_GetLineText()\t", "doc": "" },
		{ "sig": "ObjFileT_SplitLineText()\t", "doc": "" },
		{ "sig": "ObjFileT_AddLine()\t", "doc": "" },
		{ "sig": "ObjFileT_ClearLine()\t", "doc": "" },

		// Binary File Object functions

		{ "sig": "ObjFileB_SetByteOrder()\t", "doc": "" },
		{ "sig": "ObjFileB_SetCharacterCode()\t", "doc": "" },
		{ "sig": "ObjFileB_GetPointer()\t", "doc": "" },
		{ "sig": "ObjFileB_Seek()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadBoolean()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadByte()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadShort()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadInteger()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadLong()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadFloat()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadDouble()\t", "doc": "" },
		{ "sig": "ObjFileB_ReadString()\t", "doc": "" },

		// Move Object functions

		{ "sig": "ObjMove_SetX()\t", "doc": "" },
		{ "sig": "ObjMove_SetY()\t", "doc": "" },
		{ "sig": "ObjMove_SetPosition()\t", "doc": "" },
		{ "sig": "ObjMove_SetSpeed()\t", "doc": "" },
		{ "sig": "ObjMove_SetAngle()\t", "doc": "" },
		{ "sig": "ObjMove_SetAcceleration()\t", "doc": "" },
		{ "sig": "ObjMove_SetMaxSpeed()\t", "doc": "" },
		{ "sig": "ObjMove_SetAngularVelocity()\t", "doc": "" },
		{ "sig": "ObjMove_SetDestAtSpeed()\t", "doc": "" },
		{ "sig": "ObjMove_SetDestAtFrame()\t", "doc": "" },
		{ "sig": "ObjMove_SetDestAtWeight()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternA1()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternA2()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternA3()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternA4()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternB1()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternB2()\t", "doc": "" },
		{ "sig": "ObjMove_AddPatternB3()\t", "doc": "" },
		{ "sig": "ObjMove_GetX()\t", "doc": "" },
		{ "sig": "ObjMove_GetY()\t", "doc": "" },
		{ "sig": "ObjMove_GetSpeed()\t", "doc": "" },
		{ "sig": "ObjMove_GetAngle()\t", "doc": "" },

		// Enemy Object functions

		{ "sig": "ObjEnemy_Create()\t", "doc": "" },
		{ "sig": "ObjEnemy_Regist()\t", "doc": "" },
		{ "sig": "ObjEnemy_GetInfo()\t", "doc": "" },
		{ "sig": "ObjEnemy_SetLife()\t", "doc": "" },
		{ "sig": "ObjEnemy_AddLife()\t", "doc": "" },
		{ "sig": "ObjEnemy_SetDamageRate()\t", "doc": "" },
		{ "sig": "ObjEnemy_SetIntersectionCircleToShot()\t", "doc": "" },
		{ "sig": "ObjEnemy_SetIntersectionCircleToPlayer()\t", "doc": "" },

		// Boss Scene Object functions

		{ "sig": "ObjEnemyBossScene_Create()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_Regist()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_Add()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_LoadInThread()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_GetInfo()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_SetSpellTimer()\t", "doc": "" },
		{ "sig": "ObjEnemyBossScene_StartSpell()\t", "doc": "" },

		// Shot Object functions

		{ "sig": "ObjShot_Create()\t", "doc": "" },
		{ "sig": "ObjShot_Regist()\t", "doc": "" },
		{ "sig": "ObjShot_SetAutoDelete()\t", "doc": "" },
		{ "sig": "ObjShot_FadeDelete()\t", "doc": "" },
		{ "sig": "ObjShot_SetDeleteFrame()\t", "doc": "" },
		{ "sig": "ObjShot_SetDelay()\t", "doc": "" },
		{ "sig": "ObjShot_SetSpellResist()\t", "doc": "" },
		{ "sig": "ObjShot_SetGraphic()\t", "doc": "" },
		{ "sig": "ObjShot_SetSourceBlendType()\t", "doc": "" },
		{ "sig": "ObjShot_SetDamage()\t", "doc": "" },
		{ "sig": "ObjShot_SetPenetration()\t", "doc": "" },
		{ "sig": "ObjShot_SetEraseShot()\t", "doc": "" },
		{ "sig": "ObjShot_SetSpellFactor()\t", "doc": "" },
		{ "sig": "ObjShot_ToItem()\t", "doc": "" },
		{ "sig": "ObjShot_AddShotA1()\t", "doc": "" },
		{ "sig": "ObjShot_AddShotA2()\t", "doc": "" },
		{ "sig": "ObjShot_SetIntersectionCircleA1()\t", "doc": "" },
		{ "sig": "ObjShot_SetIntersectionCircleA2()\t", "doc": "" },
		{ "sig": "ObjShot_SetIntersectionLine()\t", "doc": "" },
		{ "sig": "ObjShot_SetIntersectionEnable()\t", "doc": "" },
		{ "sig": "ObjShot_SetItemChange()\t", "doc": "" },
		{ "sig": "ObjShot_IsSpellResist()\t", "doc": "" },
		{ "sig": "ObjShot_GetImageID()\t", "doc": "" },
		{ "sig": "ObjLaser_SetLength()\t", "doc": "" },
		{ "sig": "ObjLaser_SetRenderWidth()\t", "doc": "" },
		{ "sig": "ObjLaser_SetIntersectionWidth()\t", "doc": "" },
		{ "sig": "ObjLaser_SetGrazeInvalidFrame()\t", "doc": "" },
		{ "sig": "ObjLaser_SetInvalidLength()\t", "doc": "" },
		{ "sig": "ObjLaser_GetLength()\t", "doc": "" },
		{ "sig": "ObjStLaser_SetAngle()\t", "doc": "" },
		{ "sig": "ObjStLaser_GetAngle()\t", "doc": "" },
		{ "sig": "ObjStLaser_SetSource()\t", "doc": "" },
		{ "sig": "ObjCrLaser_SetTipDecrement()\t", "doc": "" },

		// Item Object functions

		{ "sig": "ObjItem_SetItemID()\t", "doc": "" },
		{ "sig": "ObjItem_SetRenderScoreEnable()\t", "doc": "" },
		{ "sig": "ObjItem_SetAutoCollectEnable()\t", "doc": "" },
		{ "sig": "ObjItem_SetDefinedMovePatternA1()\t", "doc": "" },
		{ "sig": "ObjItem_GetInfo()\t", "doc": "" },

		// Player Object functions

		{ "sig": "ObjPlayer_AddIntersectionCircleA1()\t", "doc": "" },
		{ "sig": "ObjPlayer_ClearIntersection()\t", "doc": "" },

		// Collision Object functions

		{ "sig": "ObjCol_IsIntersected()\t", "doc": "" },
		{ "sig": "ObjCol_GetListOfIntersectedEnemyID()\t", "doc": "" },
		{ "sig": "ObjCol_GetIntersectedCount()\t", "doc": "" },

	]
}